cmake_minimum_required(VERSION 2.8)
set(CMAKE_BUILD_TYPE Release)
add_subdirectory(libdivsufsort-2.0.1)
project(Sibelia CXX)
include_directories(${Sibelia_SOURCE_DIR}/include ${libdivsufsort_BINARY_DIR}/include)
add_executable(Sibelia main.cpp outputgenerator.cpp blockfinder.cpp blockinstance.cpp bifurcationstorage.cpp bulgeremoval.cpp dnasequence.cpp edge.cpp fasta.cpp graphalgorithm.cpp serialization.cpp synteny.cpp test/unrolledlisttest.cpp platform.cpp stranditerator.cpp vertexenumeration.cpp)
target_link_libraries(Sibelia divsufsort)
if(CMAKE_COMPILER_IS_GNUXX)
	list(APPEND CMAKE_CXX_FLAGS "-std=c++0x")
endif(CMAKE_COMPILER_IS_GNUXX)
if(GCC_STATIC_RUNTIME)
	list(APPEND CMAKE_CXX_FLAGS "-static-libgcc -static-libstdc++")
endif(GCC_STATIC_RUNTIME)
if(UNIX)
	set(DEFAULT_INSTALL_PATH "/usr/local")
	if(CMAKE_INSTALL_PREFIX STREQUAL DEFAULT_INSTALL_PATH)
		install(TARGETS Sibelia RUNTIME DESTINATION bin)
		install(DIRECTORY ${Sibelia_SOURCE_DIR}/resources DESTINATION /usr/share/sibelia)
	else(CMAKE_INSTALL_PREFIX STREQUAL DEFAULT_INSTALL_PATH)
		install(TARGETS Sibelia RUNTIME DESTINATION Sibelia)
		install(DIRECTORY ${Sibelia_SOURCE_DIR}/resources DESTINATION Sibelia)
	endif(CMAKE_INSTALL_PREFIX STREQUAL DEFAULT_INSTALL_PATH)
endif(UNIX)
