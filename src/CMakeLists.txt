cmake_minimum_required(VERSION 2.8)
project(Sibelia CXX)
add_subdirectory(libdivsufsort-2.0.1)
set(CMAKE_BUILD_TYPE Release)
if(CMAKE_COMPILER_IS_GNUCC)
	list(APPEND CMAKE_CXX_FLAGS "-static-libgcc")
endif()

if(CMAKE_COMPILER_IS_GNUCXX)
	list(APPEND CMAKE_CXX_FLAGS "-std=c++0x -static-libgcc -static-libstdc++")
endif()

include_directories(${Sibelia_SOURCE_DIR}/include ${libdivsufsort_BINARY_DIR}/include)
add_executable(Sibelia sibelia.cpp indexedsequence.cpp util.cpp outputgenerator.cpp blockfinder.cpp blockinstance.cpp bifurcationstorage.cpp bulgeremoval.cpp dnasequence.cpp edge.cpp fasta.cpp serialization.cpp synteny.cpp test/unrolledlisttest.cpp platform.cpp stranditerator.cpp vertexenumeration.cpp resource.cpp)
#add_executable(C-Sibelia csibelia.cpp indexedsequence.cpp variantcalling/variant.cpp variantcalling/variantcaller.cpp util.cpp outputgenerator.cpp blockfinder.cpp blockinstance.cpp bifurcationstorage.cpp bulgeremoval.cpp dnasequence.cpp edge.cpp fasta.cpp serialization.cpp synteny.cpp test/unrolledlisttest.cpp platform.cpp stranditerator.cpp vertexenumeration.cpp resource.cpp)
target_link_libraries(Sibelia divsufsort)
#target_link_libraries(C-Sibelia divsufsort)

set(CMAKE_PROJECT_NAME Sibelia)
set(ROOT_DIR "${CMAKE_SOURCE_DIR}/../")

if(BINARY_PACKAGE)
	install(TARGETS Sibelia RUNTIME DESTINATION bin)
	install(DIRECTORY ${ROOT_DIR}/examples/ DESTINATION examples)
	install(FILES ${ROOT_DIR}/NEWS.md ${ROOT_DIR}/README.md ${ROOT_DIR}/USAGE.md ${ROOT_DIR}/INSTALL.md ${ROOT_DIR}/LICENSE DESTINATION .)

else()
	install(TARGETS Sibelia RUNTIME DESTINATION bin)
endif()


set(CPACK_NSIS_MODIFY_PATH "ON")
set(CPACK_SOURCE_IGNORE_FILES "\\\\.git.*;/build/.+;${CPACK_SOURCE_IGNORE_FILES};/ext;/testingdatasets")
set(CPACK_RESOURCE_FILE_LICENSE "${ROOT_DIR}/LICENSE")
set(CPACK_PACKAGE_NAME "Sibelia")
set(CPACK_PACKAGE_VENDOR "Saint Petersburg Academical University")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Sibelia is a tool for finding synteny blocks in closely related genomes")
set(CPACK_PACKAGE_VERSION_MAJOR "2")
set(CPACK_PACKAGE_VERSION_MINOR "1")
set(CPACK_PACKAGE_VERSION_PATCH "1")
set(CPACK_PACKAGE_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "Sibelia")
set(CMAKE_SOURCE_DIR ${ROOT_DIR})
include(CPack)
