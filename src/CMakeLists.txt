cmake_minimum_required(VERSION 2.8)
project(Sibelia CXX)
add_subdirectory(libdivsufsort-2.0.1)
set(CMAKE_BUILD_TYPE Release)
if(CMAKE_COMPILER_IS_GNUCC)
	list(APPEND CMAKE_CXX_FLAGS "-static-libgcc")
endif()

if(CMAKE_COMPILER_IS_GNUCXX)
	list(APPEND CMAKE_CXX_FLAGS "-std=c++0x -static-libgcc -static-libstdc++")
endif()

include_directories(${Sibelia_SOURCE_DIR}/include ${libdivsufsort_BINARY_DIR}/include)
add_executable(Sibelia sibelia.cpp postprocessor.cpp indexedsequence.cpp util.cpp outputgenerator.cpp blockfinder.cpp blockinstance.cpp bifurcationstorage.cpp bulgeremoval.cpp dnasequence.cpp edge.cpp fasta.cpp serialization.cpp synteny.cpp test/unrolledlisttest.cpp platform.cpp stranditerator.cpp vertexenumeration.cpp resource.cpp variantcalling/variant.cpp)
target_link_libraries(Sibelia divsufsort)
set(CMAKE_PROJECT_NAME Sibelia)
set(ROOT_DIR "${CMAKE_SOURCE_DIR}/../")
if(NOT NOCSIBELIA)
	include(ExternalProject)
	externalproject_add(lagan URL "${CMAKE_SOURCE_DIR}/lagan" PREFIX lagan CONFIGURE_COMMAND "" BUILD_COMMAND make BUILD_IN_SOURCE 1 INSTALL_COMMAND "")
	externalproject_get_property(lagan SOURCE_DIR)
	file(COPY "${CMAKE_SOURCE_DIR}/csibelia/C-Sibelia.py" DESTINATION "${CMAKE_BINARY_DIR}")
	install(DIRECTORY ${SOURCE_DIR} DESTINATION bin FILE_PERMISSIONS USE_SOURCE_PERMISSIONS DIRECTORY_PERMISSIONS USE_SOURCE_PERMISSIONS)
	install(FILES ${CMAKE_BINARY_DIR}/C-Sibelia.py DESTINATION bin PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
	install(DIRECTORY ${CMAKE_SOURCE_DIR}/annotation/snpEff DESTINATION bin)
	install(FILES ${CMAKE_SOURCE_DIR}/annotation/snpEffAnnotate.py DESTINATION bin PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
endif()

install(TARGETS Sibelia RUNTIME DESTINATION bin)
if(BINARY_PACKAGE)
	install(DIRECTORY ${ROOT_DIR}/examples/ DESTINATION examples)
	install(FILES ${ROOT_DIR}/NEWS.md ${ROOT_DIR}/ANNOTATION.md ${ROOT_DIR}/README.md ${ROOT_DIR}/USAGE.md ${ROOT_DIR}/INSTALL.md ${ROOT_DIR}/SIBELIA.md ${ROOT_DIR}/C-SIBELIA.md ${ROOT_DIR}/LICENSE DESTINATION .)
endif()

set(CPACK_NSIS_MODIFY_PATH "ON")
set(CPACK_SOURCE_IGNORE_FILES "\\\\.git.*;/build/.+;${CPACK_SOURCE_IGNORE_FILES};/ext;/snpEff")
set(CPACK_RESOURCE_FILE_LICENSE "${ROOT_DIR}/LICENSE")
set(CPACK_PACKAGE_NAME "Sibelia")
set(CPACK_PACKAGE_VENDOR "Saint Petersburg Academical University")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Sibelia is a tool for finding synteny blocks in closely related genomes")
set(CPACK_PACKAGE_VERSION_MAJOR "3")
set(CPACK_PACKAGE_VERSION_MINOR "0")
set(CPACK_PACKAGE_VERSION_PATCH "0")
set(CPACK_PACKAGE_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "Sibelia")
set(CMAKE_SOURCE_DIR ${ROOT_DIR})
include(CPack)
