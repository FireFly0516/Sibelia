import os
import re
import sys
import shutil
import argparse
import subprocess

parser = argparse.ArgumentParser(description='A script for sorting sequences in Sibelia output.',
				formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument('input_folder', help='Path to folder with files generated by Sibelia/C-Sibelia')
parser.add_argument('orderchr_path', help='Path to orderchr script')
args = parser.parse_args()

folder = args.input_folder
orderchr = args.orderchr_path

circos_folder = os.path.join(folder, 'circos')
args = ['perl', orderchr, '-links', os.path.join(circos_folder, 'circos.segdup.txt'), '-karyotype', os.path.join(circos_folder, 'circos.sequences.txt')]
stdout, _ = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE).communicate()

re_order = re.compile('chromosomes_order')
order = (line for line in stdout.split('\n') if re_order.findall(line)).next()
config = os.path.join(circos_folder, 'circos.conf')
shutil.copy(config, config + '.old')
config_handle = open(config, 'a')
print >> config_handle, order
config_handle.close()


